
include(ycmake/linkcommon.cmake)
include(ycmake/software.cmake)

cmake_minimum_required(VERSION 3.14)
 
include_directories (

 

 

)


set(projname "Ptest")
project(${projname} CXX)
message("Build type: ${CMAKE_BUILD_TYPE}")
  
#
  set(BUILD_DLL 0)  
  set(BUILD_LIB 0)  
  set(console 1)  
#
#
  
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-writable-strings -O0 -Wdangling-else	-std=c++20 -dD -m64 ")

set(CMAKE_CXX_FLAGS_RELEASE "-O2 -DNDEBUG -D_DLL -D_MT -Xclang --dependent-lib=msvcrt 	-std=c++20 -std=gnu++17")



  
 
   add_library(curl_rel STATIC IMPORTED) # or STATIC instead of SHARED
   add_library(NetCorp STATIC IMPORTED) # or STATIC instead of SHARED
 

  

  sw_objs_bundle( bundle "mmexception/includes/*.cpp" )
 
  build_target(${projname} SOURCES ${bundle}  )
 
 
  
  target_link_libraries(${projname}       )
  target_compile_definitions(${projname} PRIVATE  BUILD_DLL )
 
  target_compile_features(${projname} PRIVATE cxx_std_17)
  link_common_libraries(${projname})






#########################














